do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==1) then v20=nil;function v20(v30,v31,v32)if v32 then local v66=(v30/((6 -4)^(v31-1)))%((1238 -(536 + 700))^(((v32-(1 + 0)) -(v31-((443 + 517) -(351 + 409 + 199)))) + 1 + 0));return v66-(v66%(2 -1));else local v67=(6 -4)^(v31-1);return (((v30%(v67 + v67))>=v67) and 1) or (1141 -(981 + 160));end end v21=nil;v17=2;end if (v17==7) then function v29(v33,v34,v35)local v38=0;local v39;local v40;local v41;while true do if (v38==0) then v39=v33[1];v40=v33[2];v38=1;end if (v38==1) then v41=v33[3];return function(...)local v75=0;local v76;local v77;local v78;local v79;local v80;while true do if (v75==2) then v80=nil;function v80()local v90=v39;local v91=Const;local v92=v40;local v93=v41;local v94=v27;local v95={};local v96={};local v97={};for v102=0,v79 do if (((3007 -(22 + 1936))==(2129 -(1002 + 78))) and (v102>=v93)) then v95[v102-v93]=v78[v102 + (3 -(2 + 0))];else v97[v102]=v78[v102 + (2 -1)];end end local v98=(v79-v93) + (466 -(132 + 333));local v99;local v100;while true do local v103=0;while true do if (((4345 -(43 + 52))>(95 -28)) and (v103==(0 -0))) then local v107=1616 -(766 + 850);while true do if ((v107==(0 -0)) or ((5068 -(270 + 484))<4077)) then v99=v90[v76];v100=v99[1];v107=551 -(327 + 223);end if ((v107==(1536 -(1148 + 387))) or (((10302 -7473) -(21 + 1206))>(2985 + 24))) then v103=1678 -(1115 + 562);break;end end end if ((v103==1) or ((5324 -(116 + 268))<205)) then if ((v100<=(15 + 2)) or (1082>1894)) then if (((1177 -805)<802) and (v100<=(11 -3))) then if ((3376<=(20 + 105 + 3464)) and (v100<=(1 + 2))) then if (((1316 + 1436)>=(2105 -(807 + 648))) and (v100<=(3 -2))) then if ((v100==(0 + (0 -0))) or ((97 + 95)>(5968 -(489 + 1340)))) then local v115=115 -(11 + 0 + 104);local v116;local v117;local v118;local v119;while true do if (((2800 -(4 + 10))<=(1230 + 1921)) and (v115==((1536 -(896 + 639)) + 1))) then while true do if (((423 + 544)==967) and (v116==(1 -(895 -(714 + 181))))) then v119=(0 -0) -0;for v218=v117,v99[265 -(83 + 178)] do local v219=598 -(382 + 216);local v220;while true do if ((v219==0) or (((6249 -(99 + 1193)) -2987)>=(5953 -3813))) then v220=0 -(0 + 0);while true do if ((v220==((1852 -1272) -(7 + 5 + 568))) or ((2652 -(1003 + 431))<=(886 + 196))) then v119=v119 + (1 -0);v97[v218]=v118[v119];break;end end break;end end end break;end if (((1713 -(77 + 147))<=(868 + 2951)) and (v116==0)) then local v198=(0 + 0) -(0 -0);while true do if ((v198==(1 -0)) or ((3761 -(208 + 137))<=(8707 -5688))) then v116=915 -(86 + 93 + 735);break;end if (((1604 -(27 + 463))>=892) and (v198==(1320 -(1048 + 272)))) then v117=v99[510 -(418 + 90)];v118={v97[v117](v12(v97,v117 + ((2 -0) -1),v77))};v198=(702 + 611) -(175 + 1137);end end end end break;end if ((v115==(1 + 0)) or ((6090 -(4496 -1925))<=(2882 + 336))) then v118=nil;v119=nil;v115=406 -(298 + 106);end if ((3483>=696) and (v115==0)) then v116=0 -0;v117=nil;v115=1052 -(10 + 1041);end end else local v120=51 -(27 + 24);local v121;while true do if ((v120==(1680 -(86 + 1594))) or ((242 + 533 + 869)==(11601 -9012))) then v121=v99[2];v97[v121](v97[v121 + (498 -(319 + (389 -211)))]);break;end end end elseif (((209 + 329 + 2102)==(2228 + 412)) and (v100==(1579 -(1358 + 219)))) then local v122=572 -(484 + 88);local v123;local v124;local v125;local v126;local v127;local v128;while true do if ((v122==1) or ((4008 -(1011 + 239))==2636)) then v125=nil;v126=nil;v122=163 -(33 + 128);end if ((v122==(0 -0)) or ((9008 -6403)>4099)) then v123=651 -(570 + 81);v124=nil;v122=1 + 0;end if (((2031 -(306 + 88))==((3500 -(5 + 47)) -(847 + 964))) and (v122==(3 + 0))) then while true do if (((2 + 0)==v123) or (1573>(1612 + 624))) then for v221=509 -(219 + (1998 -(904 + 805))),v125 do v97[v126 + v221]=v127[v221];end v128=v127[1 + 0 + 0];v123=49 -(33 + 3 + 10);end if (((10294 -6376)>=(3203 -(136 + 843))) and (v123==3)) then if ((3521==3521) and v128) then local v238=0 -(0 + 0);local v239;while true do if ((v238==(0 -0)) or ((6115 -1562)<1824)) then v239=0;while true do if (((313 + 144)<=(7330 -4069)) and (v239==(0 -0))) then v97[v126]=v128;v76=v99[3];break;end end break;end end else v76=v76 + 1 + 0;end break;end if (((8607 -6367)==(2799 -(525 + (1641 -(697 + 910))))) and (v123==(1 + 0))) then local v199=0 + 0;while true do if (((8027 -5646)<=((12338 + 1318) -10891)) and (v199==(0 -0))) then v126=v124 + 2;v127={v97[v124](v97[v124 + (155 -(52 + (867 -(138 + 627))))],v97[v126])};v199=478 -(14 + 463);end if ((v199==(3 -2)) or ((2006 + 1431)<(2079 -(12 + 130)))) then v123=(309 + 1457) -(228 + 1536);break;end end end if (((677 + 364 + 459)<=(6555 -2279)) and (v123==(407 -(285 + 122)))) then local v200=242 -(68 + 174);while true do if ((4008==4008) and ((0 + 0)==v200)) then v124=v99[203 -(41 + 54 + 106)];v125=v99[9 -5];v200=1;end if (((1 -0)==v200) or ((6873 -4361)==((3135 -(1527 + 189)) + 1871))) then v123=978 -(424 + 553);break;end end end end break;end if ((v122==2) or (283>=(4953 -(77 + 599)))) then v127=nil;v128=nil;v122=1 + 2;end end else v97[v99[2]]={};end elseif ((((22434 -16277) -(1107 + 693))>=(6033 -(696 + 1281))) and (v100<=(4 + 1))) then if (((4072 -(169 + 77))>400) and (v100>(1 + 3))) then v97[v99[3 -1]][v99[1356 -(282 + 1071)]]=v99[4 + 0];else v97[v99[502 -(475 + 25)]]=v99[7 -4];end elseif ((v100<=(26 -20)) or ((818 + 619)>3104)) then v97[v99[2]]=v97[v99[766 -(686 + 77)]][v99[3 + 1]];elseif ((v100==(1845 -(439 + 1399))) or ((2510 -(298 + 116))<(1731 -1280))) then local v178=0 -0;local v179;local v180;while true do if (((724 + 15)<2968) and (v178==(1 + 0))) then while true do if (((6307 -1517)>=(4819 -3054)) and (v179==(1214 -(125 + 1089)))) then v180=v99[1594 -(1105 + 487)];v97[v180]=v97[v180](v97[v180 + 1 + 0 + 0]);break;end end break;end if (((0 + 0)==v178) or (2213>=4324)) then v179=59 -(47 + 12);v180=nil;v178=1 -(0 -0);end end elseif ((v97[v99[(1 + 3) -2]]~=v99[4]) or (4841==(1988 -(128 + 222)))) then v76=v76 + 1 + 0;else v76=v99[5 -2];end elseif (((1752 -(254 + 28))>774) and (v100<=(1 + 11))) then if ((v100<=(1137 -(952 + 175))) or ((462 -168)==(7131 -3009))) then if ((v100==(247 -(182 + 56))) or (((3205 -1253) -(927 + 239))>(6102 -3777))) then v97[v99[2]]=v99[3]~=(0 -0);else v97[v99[274 -(98 + (645 -471))]]=v97[v99[1924 -(717 + 512 + 692)]];end elseif ((v100==11) or (((5231 -(891 + 8)) -(172 + 4))==(2897 -1595))) then local v135=1633 -(473 + 1160);local v136;local v137;local v138;local v139;while true do if (((1613 -(1329 + (762 -(558 + 166))))==(495 -249)) and (v135==(1 + 1))) then while true do if (((1789 + 270)<=(4141 -(227 + (1600 -(1088 + 391))))) and (v136==(1 + 0))) then v139=0;for v223=v137,v99[93 -(85 + 4)] do local v224=0;local v225;local v226;while true do if ((v224==(1 + (0 -0))) or ((833 + 529)<(659 -(407 + 185)))) then while true do if ((v225==(0 -0)) or ((1504 -(515 + 372))>=(3209 -(305 + 380)))) then v226=1283 -(316 + 967);while true do if (((786 + 4123)>=(5710 -((3495 -2705) + 202))) and ((0 + (0 -0))==v226)) then v139=v139 + (1 -0);v97[v223]=v138[v139];break;end end break;end end break;end if (((4366 -(4 + 66))==(2775 + 1521)) and (v224==(0 + 0))) then v225=0;v226=nil;v224=1186 -(274 + (1703 -792));end end end break;end if ((v136==(521 -(106 + 415))) or ((5065 -(974 + 299))<(2030 -(312 + 754)))) then local v201=0 + 0;while true do if (((2153 -1305)<=2646) and (v201==(1 -0))) then v136=1294 -((629 -307) + 971);break;end if ((v201==(0 + 0)) or ((40 + 29)>=(1715 + 326))) then v137=v99[5 -3];v138={v97[v137](v97[v137 + 1])};v201=1220 -(334 + 885);end end end end break;end if ((((18559 -9296) -6515)==(376 + 17 + 2355)) and (v135==(122 -(11 + 110)))) then v138=nil;v139=nil;v135=1 + 1;end if (((444 + 11)<=(7961 -4391)) and (v135==0)) then v136=585 -(345 + 240);v137=nil;v135=1 + 0 + 0;end end else local v140=0;local v141;local v142;local v143;local v144;local v145;while true do if (((6610 -(16604 -11901))<(1464 + 1714)) and (v140==0)) then v141=0;v142=nil;v140=1 -(0 + 0);end if ((v140==1) or ((114 + 76)==(4423 -(78 + 685)))) then v143=nil;v144=nil;v140=3 -1;end if (((4407 -(36 + 1414))>=(1461 + (1816 -1057))) and (v140==(1289 -(665 + 622)))) then v145=nil;while true do if ((v141==2) or (1754==3777)) then for v227=v142,v77 do local v228=0;local v229;while true do if (((2524 -(38 + 91))<4355) and (v228==0)) then v229=0;while true do if ((v229==(0 + 0)) or ((4675 -(690 + (1615 -(27 + 659))))>(1357 + 2874))) then v145=v145 + 1;v97[v227]=v143[v145];break;end end break;end end end break;end if (((6466 -(678 + 1312))==(13443 -8967)) and ((1 + 0 + 0)==v141)) then v77=(v144 + v142) -1;v145=259 -(100 + 159);v141=(1 + 1) -0;end if ((v141==0) or ((1432 + 1741)<=(1518 -878))) then local v202=0 + 0;while true do if ((v202==(2 -1)) or (4956<=2067)) then v141=1;break;end if ((v202==(0 -(0 -0))) or ((388 + 1803)<=((617 -189) + 413))) then v142=v99[2];v143,v144=v94(v97[v142](v12(v97,v142 + (1876 -(1055 + 820)),v99[1 + 2])));v202=1124 -(882 + 241);end end end end break;end end end elseif ((4755>(1247 -(145 + 340))) and (v100<=(181 -(47 + 120)))) then if (((340 + 1432)<2130) and (v100>13)) then if (((11 + 7 + 3)==((1370 -(868 + 490)) + 9)) and (v97[v99[(1739 -(1632 + 104)) -1]]==v99[2 + 2])) then v76=v76 + (1 -0);else v76=v99[(9405 -7431) -(1571 + 400)];end else v97[v99[2]]();end elseif (((2239 + 2310)==(3502 + 1047)) and (v100<=(14 + 1))) then local v146=0 + 0;local v147;local v148;while true do if (((1046 -(188 + 858))==v146) or ((2152 + 2186)<=(1564 -774))) then v147=(321 -246) -(4 + 71);v148=nil;v146=2 -1;end if (((2002 -(804 + 1179))<=((39 + 12765) -8036)) and (v146==(1 + 0))) then while true do if ((36==(28 + 8)) and (0==v147)) then v148=v99[3 -1];v97[v148]=v97[v148]();break;end end break;end end elseif ((1902<=(2060 + 316)) and (v100>(76 -(373 -(85 + 228))))) then local v181=0 -0;local v182;local v183;while true do if (((1803 -948)==(2397 -(5843 -4301))) and (v181==0)) then v182=0 + (0 -0);v183=nil;v181=1 + 0;end if ((v181==1) or ((6074 -3864)>=(3660 -(32 + 157)))) then while true do if ((1666<(3933 + 291)) and (v182==0)) then v183=v99[1 + 1];v97[v183](v12(v97,v183 + (321 -(212 + 108)),v99[(3 -2) + 2]));break;end end break;end end else v97[v99[2]]=v97[v99[3 + 0]] -v99[(6 + 9) -11];end elseif (((3739 -(1571 + 92))<(2254 + 1731)) and (v100<=26)) then if (((15457 -11895)>=3186) and (v100<=(48 -27))) then if ((4262>(3675 -(407 + 1252))) and (v100<=(14 + 5))) then if ((2241==(230 + 2011)) and (v100>(70 -52))) then local v149=0 + 0;local v150;local v151;local v152;while true do if ((v149==1) or ((4348 -(62 + 924))==(3646 -(407 + 883)))) then v152=nil;while true do if ((v150==(811 -(485 + 326))) or (2204<=(53 + 256))) then local v204=0 -0;while true do if ((v204==((1338 -(1169 + 168)) -0)) or ((13635 -10463)<=(3084 -(715 + 1030)))) then v150=1 + 0;break;end if ((135==(223 -88)) and (v204==(1725 -(1026 + 697 + 2)))) then v151=v99[8 -6];v152=v97[v99[1363 -(393 + 967)]];v204=2 -1;end end end if (((793 -282)>(272 + 89)) and (v150==(1 -0))) then v97[v151 + (210 -(58 + 151))]=v152;v97[v151]=v152[v99[4]];break;end end break;end if ((v149==0) or ((12376 -8084)<(4420 -(962 + 818)))) then v150=0 -0;v151=nil;v149=1701 -(1618 + 82);end end else v97[v99[1 + 1]]=v29(v92[v99[11 -8]],nil,v35);end elseif ((2676>=(2899 -(21 + 674))) and (v100>20)) then local v154=0 + 0;local v155;local v156;while true do if ((v154==1) or (((21185 -12569) -3931)<=(351 -(149 + 103)))) then while true do if ((v155==0) or (((51 + 16) -39)>=(5086 -3369))) then v156=v99[394 -(351 + 41)];v97[v156]=v97[v156](v12(v97,v156 + 1,v77));break;end end break;end if (((753 + 1552)>=(789 -(114 + 644))) and (v154==0)) then v155=0 -0;v156=nil;v154=(1703 -(24 + 305)) -((2330 -1138) + 181);end end else local v157=0 + 0;local v158;local v159;local v160;local v161;while true do if (((2012 -(355 + 176))>=((879 + 1977) -(313 + 1326))) and (v157==(1 + 0))) then local v195=0;while true do if ((3646>(1914 -(53 + 16))) and (v195==(2 -1))) then v157=(3 + 0) -1;break;end if (((2729 -(2197 -1062))<4050) and (v195==(0 -0))) then v160=nil;v161=nil;v195=1;end end end if (((3048 -(2361 -765))>(1248 -(228 + 933))) and (v157==(0 -0))) then v158=0 -0;v159=nil;v157=(1396 + 67) -(337 + 447 + 678);end if (((2346 + 1687)>=(9588 -7494)) and (v157==(1 + 1))) then while true do if ((v158==2) or ((620 + 693 + 1813)<=(107 + 15 + 11))) then for v230=1,v99[4] do local v231=1727 -(723 + 1004);local v232;local v233;while true do if ((((3233 -(911 + 205)) -(722 + 979))==(280 + 136)) and (v231==1)) then while true do if ((v232==(1 + 0)) or ((417 + 2070 + 1669)<=(3998 + 23))) then if ((v233[1 + (0 -0)]==10) or (((269 + 81) -(52 + 157))>=(663 + 3511))) then v161[v230-(1 + 0)]={v97,v233[11 -8]};else v161[v230-(1 -0)]={v34,v233[(788 -(270 + 516)) + 1]};end v96[ #v96 + 1 + 0]=v161;break;end if (((9929 -6745)>=((1551 -(891 + 144)) -(115 + 61))) and (v232==0)) then local v268=0;while true do if ((v268==(1271 -(181 + 1090))) or (1516<(2077 -(1477 + 141)))) then v76=v76 + (470 -(177 + (1231 -(49 + 890))));v233=v90[v76];v268=1 + 0;end if ((v268==1) or ((18456 -(54133 -40412))==4927)) then v232=1 + 0;break;end end end end break;end if ((v231==(0 -(561 -(425 + 136)))) or ((6154 -((2193 -(384 + 1035)) + 749))<=(5520 -(973 + 579)))) then v232=0 + 0;v233=nil;v231=1;end end end v97[v99[1 + 1]]=v29(v159,v160,v35);break;end if (((1162 + 2643)<4956) and (v158==(906 -(210 + 696)))) then local v209=0 -(0 + 0);while true do if ((v209==(1 + 0)) or (((3030 + 34) -1934)==(7810 -5703))) then v158=1;break;end if ((v209==0) or ((5746 -(547 + 688))<(1708 -(4 + 1 + 584)))) then v159=v92[v99[413 -(236 + (1284 -(959 + 151)))]];v160=nil;v209=286 -((489 -251) + 47);end end end if ((v158==(1373 -((1656 -(324 + 879)) + 919))) or (851>=(1128 + (4319 -(753 + 453))))) then local v210=(0 -0) + 0;local v211;while true do if (((2418 -(6 + 67))>=(124 + 721)) and (v210==(583 -(549 + 34)))) then v211=0;while true do if (((541 -(74 + 10))==(118 + (2282 -(1711 + 232)))) and (((435 + 199) -(128 + 506))==v211)) then local v262=0 -0;while true do if ((3196>(8 + (62 -18))) and (v262==(2 -1))) then v211=1 + 0;break;end if (((6912 -2685)>=(2214 -1394)) and (v262==(1158 -(1058 + 71 + 29)))) then v161={};v160=v9({},{__index=function(v277,v278)local v284=134 -(101 + 33);local v285;local v286;local v287;while true do if ((v284==(806 -(314 + 491))) or ((4828 -2174)<(2525 -1717))) then v287=nil;while true do if (((250 + (5293 -(739 + 632)))>=987) and (v285==1)) then while true do if ((v286==(0 + 0)) or ((1506 -(20 + 1019))>=((6529 -(862 + 953)) -(109 + 979)))) then local v310=0 + 0;local v311;while true do if ((v310==(0 -(598 -(247 + 351)))) or ((3637 -(562 + 427))==(3748 -((1319 -966) + 741)))) then v311=0;while true do if (((0 -0)==v311) or ((7744 -5674)==(5411 -(319 + 457)))) then v287=v161[v278];return v287[1][v287[1 + 1]];end end break;end end end end break;end if ((1057<=(369 + (11894 -7324))) and (v285==(1449 -(960 + (1019 -530))))) then local v304=0 -0;while true do if ((4110>(816 -452)) and ((857 -(115 + 741))==v304)) then v285=1 -0;break;end if ((v304==(0 + 0)) or ((988 -((1232 -(289 + 514)) + (440 -(142 + 276))))>974)) then v286=0 -0;v287=nil;v304=904 -(795 + 108);end end end end break;end if ((v284==(0 -0)) or ((4558 -(76 + 117))==(1406 + 1592))) then v285=0;v286=nil;v284=1 + 0;end end end,__newindex=function(v279,v280,v281)local v288=0;local v289;local v290;while true do if ((v288==(1 + 0)) or ((7959 -3356)==(13 + 2226))) then while true do if ((((6298 -3366) -2141)<=(2368 -(473 + 754))) and (v289==(0 -0))) then v290=v161[v280];v290[1 + 0 + 0 + 0][v290[3 -(1 + 0)]]=v281;break;end end break;end if (((3105 -957)<=3951) and (v288==(0 -0))) then v289=0;v290=nil;v288=1 + 0;end end end});v262=1 + 0;end end end if (((438 + 3562)>(86 + 389)) and (v211==(1 + 0))) then v158=(3 + 1) -2;break;end end break;end end end end break;end end end elseif ((v100<=((41 -28) + 10)) or ((1105 -389)>=((2299 + 8817) -8102))) then if ((v100>(88 -66)) or (((7474 -(812 + 168)) -2705)<(165 + 3043))) then v97[v99[1120 -(295 + 823)]]=v34[v99[(2289 -(709 + 501)) -(593 + 483)]];elseif ((v99[1 + (209 -(43 + 165))]==v97[v99[4]]) or ((2530 + 1520)<(6075 -2993))) then v76=v76 + (1842 -((1982 -932) + 791));else v76=v99[1134 -(754 + 377)];end elseif (((5803 -4536)==1267) and (v100<=(16 + 8))) then if (v97[v99[2]] or ((2378 -((492 -(116 + 200)) + 72))>=(5056 -(600 + 900)))) then v76=v76 + (1 -0);else v76=v99[880 -(113 + 764)];end elseif (((1738 + 434)<((10201 -6710) + 356)) and (v100==(40 -15))) then local v185=1191 -(1159 + 32);local v186;local v187;local v188;local v189;local v190;local v191;while true do if ((3853>(193 -144)) and (v185==(0 + 0))) then v186=0 -0;v187=nil;v185=1;end if (((798 + 2055)>=(3751 -(290 + 1381))) and ((2 -0)==v185)) then v190=nil;v191=nil;v185=7 -4;end if ((1==v185) or ((12620 -9782)<=(134 + 215))) then v188=nil;v189=nil;v185=6 -4;end if ((((37717 -24213) -8817)>528) and (v185==(4 -1))) then while true do if ((v186==2) or ((128 + 172)==(7648 -5216))) then v191=nil;while true do if ((v187==(1 + 1)) or (4360<2512)) then for v263=v188,v77 do local v264=(0 -0) -0;while true do if ((v264==(0 -0)) or ((4764 -2627)>(2285 + 2678))) then v191=v191 + (412 -(110 + 301));v97[v263]=v189[v191];break;end end end break;end if ((865==((1599 + 554) -1288)) and (v187==0)) then local v259=98 -(63 + 35);local v260;while true do if ((v259==(0 -0)) or ((2731 -(501 + 264))>(2891 + 1109))) then v260=0 -0;while true do if (((2185 -(28 + 71))>(3850 -(3332 -(791 + 108)))) and ((1 + 0)==v260)) then v187=1;break;end if ((v260==(0 -0)) or ((163 + 18)==(4882 -(336 + 186)))) then local v291=0 -0;while true do if (((3 -2)==v291) or ((8262 -3958)<=(4871 -2600))) then v260=1 + 0;break;end if ((v291==(531 -(261 + 270))) or ((3444 + 958)<=(11552 -7458))) then v188=v99[1513 -(761 + 750)];v189,v190=v94(v97[v188](v97[v188 + (1 -0)]));v291=753 -(40 + 712);end end end end break;end end end if ((v187==1) or (2204<(1667 -(40 + 14)))) then local v261=0 + 0;while true do if ((v261==1) or ((12540 -8154)>(6885 -2142))) then v187=2;break;end if (((5011 -(56 + 1166))<(5301 -(466 + 582))) and (v261==(808 -(61 + 747)))) then v77=(v190 + v188) -(748 -(421 + 326));v191=0 -0;v261=1 + 0;end end end end break;end if ((((10494 -(147 + 606)) -5333)>=(158 + 89)) and (v186==(1087 -((3820 -2812) + 78)))) then local v241=118 -((1635 -(1007 + 555)) + 45);while true do if (((863 + 1327)==(2872 -(285 + 397))) and (v241==((3 -2) -0))) then v186=1276 -(1266 + 8);break;end if ((991>=((4998 -3335) -821)) and (v241==(0 + 0))) then v189=nil;v190=nil;v241=1;end end end if ((v186==(0 -0)) or ((2392 -(1738 + 233))==3339)) then local v242=0;while true do if ((2010<(8294 -4480)) and ((1 + 0)==v242)) then v186=3 -2;break;end if ((v242==0) or (3926<(2735 -(1541 + 372)))) then v187=0 + (0 -0);v188=nil;v242=1 + 0;end end end end break;end end else v97[v99[3 -(1600 -(1126 + 473))]]=v35[v99[7 -4]];end elseif ((v100<=(61 -30)) or ((320 -114)==(1493 -(488 + 199)))) then if (((5533 -2425)==(4643 -(1383 + (1437 -(836 + 449))))) and (v100<=(4 + 24))) then if ((v100>(1883 -(773 + 1083))) or (369==(775 + (810 -548)))) then v34[v99[4 -1]]=v97[v99[39 -(32 + 5)]];else local v164=0 -0;local v165;local v166;while true do if (((1836 -(55 + 173))>(627 + 290)) and (v164==((0 -0) -0))) then v165=0;v166=nil;v164=(659 -(43 + 615)) + 0;end if (((1 + 0)==v164) or ((3826 -(128 + 169))<=(4883 -(137 + (2808 -1239))))) then while true do if ((v165==(0 + 0)) or ((152 + 418)>=(791 + 1041))) then v166=v99[4 -2];v97[v166]=v97[v166](v12(v97,v166 + (12 -(5 + 6)),v99[6 -3]));break;end end break;end end end elseif ((v100<=((876 -(188 + 186)) -(101 + 372))) or ((3716 -(389 + 370))>(2692 + 956))) then v35[v99[3 + 0]]=v97[v99[2]];elseif (((765 -494)<668) and (v100>(1855 -(255 + 1570)))) then v76=v99[776 -(81 + 1 + 691)];else v97[v99[(1416 + 106) -(659 + 861)]]=v97[v99[1400 -(949 + 448)]] + v97[v99[331 -(98 + 229)]];end elseif ((2486>=(399 + 1754)) and (v100<=(11 + 22))) then if (((11648 -8355)<3987) and (v100>(44 -12))) then for v175=v99[1841 -(893 + 946)],v99[3] do v97[v175]=nil;end else v97[v99[(708 -(307 + 399)) + 0]][v99[763 -(270 + 490)]]=v97[v99[1 + (7 -4)]];end elseif (((80 -45)<(2240 -1478)) and (v100<=((259 + 51) -(251 + 25)))) then local v169=1391 -((1441 -(1175 + 1)) + (1932 -806));local v170;local v171;local v172;local v173;while true do if (((729 -413)<(72 + 1532 + 660)) and (v169==(1749 -(347 + 1402)))) then v170=0 -(1061 -(993 + 68));v171=nil;v169=1567 -(1512 + 54);end if (((6813 -2480)>=3471) and (v169==2)) then while true do if ((v170==(1031 -(533 + 497))) or ((5622 -(1548 + 283))<=3503)) then v173=nil;while true do if (((2867 -(166 + 730))>=(44 -26)) and (v171==1)) then for v245=2 -1, #v96 do local v246=823 -(315 + 508);local v247;local v248;while true do if (((0 -0)==v246) or ((105 + 78)>=(1120 + 2374))) then v247=0 -0;v248=nil;v246=(901 -(409 + 491)) + 0;end if ((v246==1) or ((1293 -(571 + (1750 -(665 + 465))))>(7974 -3460))) then while true do if (((4811 -2305)<=(11497 -8653)) and ((670 -(599 + 71))==v247)) then v248=v96[v245];for v292=355 -(221 + (503 -369)), #v248 do local v293=0 -0;local v294;local v295;local v296;local v297;while true do if (((622 + 2203)>(914 -(339 + (1150 -(840 + 149))))) and (v293==(348 -(132 + 214)))) then while true do if ((((18902 -(61 + 449)) -13497)>=(4627 -(109 + 887))) and (v294==(1796 -(742 + (2732 -1679))))) then v297=v295[1 + 1];if (((v296==v97) and (v297>=v172)) or ((2631 + 626)<(4253 -(909 + 630)))) then local v308=0 -0;local v309;while true do if (((37 + 29)==(258 -192)) and (v308==(0 -0))) then v309=0 -0;while true do if ((29<=4824) and (v309==(1046 -(502 + 368 + 176)))) then v173[v297]=v296[v297];v295[1 + 0]=v173;break;end end break;end end end break;end if ((v294==0) or ((1157 + 3582)<3549)) then local v306=741 -(431 + 310);local v307;while true do if ((v306==0) or ((6113 -3357)==(2843 + 384))) then v307=0;while true do if ((v307==(1422 -(838 + 583))) or (((1915 + 178) -(180 + 1388))==(1445 + 116))) then v294=2 -1;break;end if (((852 + 1575 + 1656)>(584 + (2108 -915))) and (v307==(0 + 0))) then local v316=0;while true do if ((v316==1) or (((1224 -(201 + 168)) + 4101)<((8352 -(922 + 811)) -4371))) then v307=1806 -(738 + 1067);break;end if (((3306 -(468 + 1190))>=913) and ((1905 -(979 + 642 + 284))==v316)) then v295=v248[v292];v296=v295[(1407 -(255 + 1151)) -0];v316=1 + 0;end end end end break;end end end end break;end if (((4359 -(300 + 1514))>=1724) and (v293==(1 + 0))) then v296=nil;v297=nil;v293=2;end if (((3009 -(260 + 216))<(3413 -(194 + 227))) and (v293==0)) then local v298=0 + 0;while true do if (((670 -348)<=(1480 -598)) and (((0 + 0) -0)==v298)) then v294=194 -(192 + 2);v295=nil;v298=1 + 0;end if ((v298==(1 + 0)) or (1844>=(5851 -((1830 -(1261 + 70)) + (2702 -1920))))) then v293=410 -(226 + 183);break;end end end end end break;end end break;end end end break;end if ((v171==(0 + 0)) or (((5508 -(896 + 222)) -(12 + 219))>(5265 -(153 + 207 + 48)))) then local v243=0;local v244;while true do if ((0==v243) or ((13079 -9107)<(799 -471))) then v244=0 -(1689 -(761 + 928));while true do if (((1438 + 642)>(1250 + 56)) and (v244==0)) then local v275=0 + 0;while true do if (((0 + 0)==v275) or ((2626 -(579 + 775))==((7155 -(503 + 1330)) -(193 + (900 -(234 + 509)))))) then v172=v99[2];v173={};v275=1;end if (((239 + 197)<=((2060 -(1407 + 45)) + 845)) and (v275==(1 + 0))) then v244=1;break;end end end if (((9712 -7433)==(6234 -3955)) and (v244==((2110 -774) -(248 + 1087)))) then v171=1 + 0;break;end end break;end end end end break;end if ((v170==(0 + 0 + 0)) or (((845 + 1690) -((2316 -(251 + 1529)) + 394))>=(10371 -5499))) then local v213=(446 -(239 + 207)) + 0;while true do if (((2812 -(644 + 179))<=(2163 + 869)) and ((0 + 0 + 0 + 0)==v213)) then v171=0 + 0;v172=nil;v213=1;end if ((v213==1) or (4022<(10160 -6599))) then v170=1;break;end end end end break;end if ((v169==(3 -2)) or (463>(1334 -(653 + 17)))) then v172=nil;v173=nil;v169=6 -(7 -3);end end elseif ((4014>=1000) and (v100==35)) then v97[v99[2 -0]]= not v97[v99[8 -(6 -1)]];else do return;end end v76=v76 + (1 -0);break;end end end end v75=3;end if (v75==3) then A,B=v27(v10(v80));if  not A[1] then local v101=v33[4][v76] or "?";error("Script error at ["   .. v101   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end if (v75==1) then v78={...};v79=v11("#",...) -1;v75=2;end if (v75==0) then v76=1;v77= -1;v75=1;end end end;end end end return v29(v28(),{},v16)();end if (v17==6) then v28=nil;function v28()local v42=0 + 0;local v43;local v44;local v45;local v46;local v47;local v48;local v49;local v50;while true do if (v42==(2 -0)) then local v72=0 -0;while true do if (v72~=(1 -0)) then else v42=3;break;end if (v72==0) then v47=nil;v48=nil;v72=1 + 0;end end end if (v42~=(1180 -(862 + 315))) then else local v73=0;while true do if (v73~=(1 + 0)) then else v42=4;break;end if ((564 -(6 + 558))~=v73) then else v49=nil;v50=nil;v73=1;end end end if (v42==(2 + 2)) then while true do if (v43~=(1 + 2)) then else v50=nil;while true do local v85=0;local v86;local v87;while true do if (v85==(1 + 0)) then while true do if (v86~=0) then else v87=0 + 0;while true do if (0~=v87) then else local v108=0 -0;while true do if (v108~=1) then else v87=1;break;end if (v108==0) then if (v44==1) then local v111=0 + 0;local v112;while true do if (v111==0) then v112=0;while true do if (v112==(1337 -(503 + 833))) then local v196=0;while true do if (v196~=1) then else v112=830 -(22 + 806);break;end if (v196==0) then for v234=1,v49 do local v235=0 + 0;local v236;local v237;while true do if (v235~=(0 -0)) then else local v249=0;local v250;while true do if (v249~=0) then else v250=0 + 0;while true do if (v250==(1 + 0)) then v235=1;break;end if (v250==0) then local v282=0;while true do if (v282==(973 -(459 + 513))) then v250=1;break;end if ((493 -(431 + 62))==v282) then v236=v21();v237=nil;v282=4 -3;end end end end break;end end end if (v235==1) then if (v236==1) then v237=v21()~=0;elseif (v236==2) then v237=v24();elseif (v236==3) then v237=v25();end v50[v234]=v237;break;end end end v48[3]=v21();v196=508 -(303 + 204);end end end if (v112==(0 + 0)) then local v197=835 -(652 + 183);while true do if (v197~=(0 + 0)) then else v49=v23();v50={};v197=1;end if (v197==(1 + 0)) then v112=1;break;end end end if (v112~=(1 + 1)) then else v44=2;break;end end break;end end end if (v44==(646 -(213 + 431))) then local v113=0;local v114;while true do if (0==v113) then v114=0;while true do local v177=0;while true do if (v177==(1807 -(1409 + 398))) then if (v114==1) then local v215=1084 -(920 + 164);local v216;while true do if (v215~=(0 + 0)) then else v216=0 -0;while true do if (v216~=0) then else for v269=1,v23() do v47[v269]=v23();end return v48;end end break;end end end if ((809 -(493 + 316))==v114) then local v217=0;while true do if (v217==(1924 -(743 + 1180))) then v114=1275 -(176 + 1098);break;end if (v217~=0) then else for v252=1,v23() do local v253=0 + 0;local v254;local v255;local v256;while true do if (v253==(1 + 0)) then v256=nil;while true do if (v254==1) then while true do if (v255~=(0 + 0)) then else v256=v21();if (v20(v256,1384 -(996 + 387),2 -1)~=0) then else local v299=0;local v300;local v301;local v302;local v303;while true do if (v299~=(1 -0)) then else v302=nil;v303=nil;v299=291 -(264 + 25);end if (v299~=0) then else v300=0;v301=nil;v299=1;end if (v299==(1 + 1)) then while true do if ((0 -0)==v300) then local v312=0 + 0;local v313;while true do if (v312~=0) then else v313=0 + 0;while true do if ((525 -(145 + 379))~=v313) then else v300=1;break;end if ((1771 -(1363 + 408))==v313) then local v326=0 + 0;while true do if (v326~=(0 + 0)) then else v301=v20(v256,2 + 0,173 -(59 + 111));v302=v20(v256,4,6);v326=2 -1;end if ((1 -0)==v326) then v313=2 -1;break;end end end end break;end end end if (v300==1) then v303={v22(),v22(),nil,nil};if (v301==0) then local v317=0;while true do if ((0 -0)==v317) then v303[3]=v22();v303[4]=v22();break;end end elseif (v301==(1266 -(696 + 569))) then v303[7 -4]=v23();elseif (v301==(2 + 0)) then v303[6 -3]=v23() -(2^16);elseif (v301==(3 + 0)) then local v328=0 + 0;local v329;while true do if (v328==(0 -0)) then v329=0;while true do if (v329==0) then v303[7 -4]=v23() -((1 + 1)^(1368 -(405 + 947)));v303[2 + 2]=v22();break;end end break;end end end v300=2;end if (v300~=2) then else local v314=0;while true do if (v314==0) then if (v20(v302,1,1)~=1) then else v303[5 -3]=v50[v303[2]];end if (v20(v302,1908 -(404 + 1502),2)==(1 + 0)) then v303[1803 -(1035 + 765)]=v50[v303[3]];end v314=1 -0;end if (v314==1) then v300=3;break;end end end if (v300==(4 -1)) then if (v20(v302,509 -(394 + 112),3)~=1) then else v303[18 -14]=v50[v303[413 -(130 + 279)]];end v45[v252]=v303;break;end end break;end end end break;end end break;end if (v254==0) then local v283=1454 -(423 + 1031);while true do if (0==v283) then v255=0 + 0;v256=nil;v283=1812 -(466 + 1345);end if (v283~=(1 + 0)) then else v254=3 -2;break;end end end end break;end if ((0 -0)~=v253) then else v254=0;v255=nil;v253=1;end end end for v257=1142 -(40 + 1101),v23() do v46[v257-1]=v28();end v217=1 + 0;end end end break;end end end break;end end end v108=2 -1;end end end if (v87==1) then if (v44~=0) then else local v109=90 -(28 + 62);local v110;while true do if (v109==(0 + 0)) then v110=0;while true do if (v110==0) then v45={};v46={};v110=299 -(192 + 106);end if ((1911 -(1062 + 847))==v110) then v44=1 -0;break;end if (v110==(2 -1)) then local v174=165 -(154 + 11);while true do if (v174~=1) then else v110=1845 -(1652 + 191);break;end if (v174==0) then v47={};v48={v45,v46,nil,v47};v174=1;end end end end break;end end end break;end end break;end end break;end if (v85~=(0 -0)) then else v86=0;v87=nil;v85=1 -0;end end end break;end if (v43~=2) then else local v81=0 -0;local v82;while true do if (v81==0) then v82=895 -(824 + 71);while true do if (v82~=1) then else v43=3;break;end if (v82==(1346 -(1086 + 260))) then local v104=0;while true do if (v104==0) then v48=nil;v49=nil;v104=1;end if (v104==1) then v82=1 + 0;break;end end end end break;end end end if (v43==(0 -0)) then v44=0 -0;v45=nil;v43=1;end if (1==v43) then local v83=0 -0;local v84;while true do if (v83==(0 + 0)) then v84=0 + 0;while true do if (v84==1) then v43=1 + 1;break;end if (v84==0) then v46=nil;v47=nil;v84=1;end end break;end end end end break;end if (v42~=0) then else local v74=800 -(7 + 793);while true do if (v74~=0) then else v43=670 -(643 + 27);v44=nil;v74=1;end if (v74==(3 -2)) then v42=1 + 0;break;end end end if (v42==1) then v45=nil;v46=nil;v42=1 + 1;end end end v29=nil;v17=7;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==3) then v23=nil;function v23()local v51=0 -0;local v52;local v53;local v54;local v55;while true do if (v51==((539 + 183) -(417 + (1337 -(171 + 861))))) then v52,v53,v54,v55=v1(v15,v18,v18 + (11 -8));v18=v18 + (5 -1);v51=1;end if (v51==(2 -1)) then return (v55 * (15652594 + 1124622)) + (v54 * ((52651 + 13358) -(77 + 396))) + (v53 * 256) + v52;end end end v24=nil;v17=4;end if (v17==4) then function v24()local v56=v23();local v57=v23();return (( -(1943 -(589 + (2660 -1308))) * v20(v57,(1947 -(864 + 128)) -(788 + 135))) + (1636 -(214 + 1421))) * ((5 -3)^(v20(v57,1063 -(625 + 417),143 -((1980 -(219 + 1673)) + 24)) -(345 + 601 + 77))) * ((((v20(v57,1070 -((1571 -(265 + 332)) + 95),20) * (2^((245 -105) -(13 + 21 + 74)))) + v56)/((1 + 1)^52)) + ((3538 -2378) -(519 + 640)));end v25=nil;function v25(v36)local v58;if  not v36 then local v68=0 -0;while true do if (v68==((1586 -(138 + 1448)) -0)) then v36=v23();if (v36==(0 + 0 + 0)) then return "";end break;end end end v58=v3(v15,v18,(v18 + v36) -(1 + 0));v18=v18 + v36;local v59={};for v64=(5477 -3776) -(1352 + 348), #v58 do v59[v64]=v2(v1(v3(v58,v64,v64)));end return v6(v59);end v17=5;end if (v17==2) then function v21()local v60=v1(v15,v18,v18);v18=v18 + 1;return v60;end v22=nil;function v22()local v61=0 + 0;local v62;local v63;while true do if (v61==(0 -0)) then v62,v63=v1(v15,v18,v18 + (7 -5) + 0);v18=v18 + 1 + 1;v61=2 -1;end if (v61==(1722 -(721 + 1000))) then return (v63 * 256) + v62;end end end v17=3;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then local v69=0;while true do if (0==v69) then v19=v0(v3(v37,1,1));return "";end end else local v70=0;local v71;while true do if (0==v70) then v71=v2(v0(v37,16));if v19 then local v88=0;local v89;while true do if (0==v88) then v89=v5(v71,v19);v19=nil;v88=1;end if (v88==1) then return v89;end end else return v71;end break;end end end end);v17=1;end end end vv8());end
